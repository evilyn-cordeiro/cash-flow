datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  cpfCnpj   String   @unique
  email     String   @unique
  password  String
  kind      UserKind
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions Transaction[]
  services     Service[]     @relation("UserServices")
  schedules    Schedule[]    @relation("CustomerSchedules")
}

enum UserKind {
  MEI
  Customer
}

model Transaction {
  id          Int             @id @default(autoincrement())
  userId      Int
  type        TransactionType
  name        String
  description String?
  amount      Float
  date        DateTime        @default(now())
  pdfUrl      String? // Campo para armazenar o link do PDF
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  user        User            @relation(fields: [userId], references: [id])
}

enum TransactionType {
  INCOME // Entrada
  EXPENSE // Sa√≠da
}

model Service {
  id          Int      @id @default(autoincrement())
  meiId       Int
  name        String
  description String?
  duration    Int
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  mei       User       @relation("UserServices", fields: [meiId], references: [id])
  schedules Schedule[]
}

model Schedule {
  id          Int            @id @default(autoincrement())
  serviceId   Int
  customerId  Int
  scheduledAt DateTime
  status      ScheduleStatus @default(PENDING)
  notes       String?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  service  Service @relation(fields: [serviceId], references: [id])
  customer User    @relation("CustomerSchedules", fields: [customerId], references: [id])
}

enum ScheduleStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
